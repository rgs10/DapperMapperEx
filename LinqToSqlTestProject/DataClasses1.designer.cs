#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinqToSqlTestProject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TestDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomPublicHoliday(CustomPublicHoliday instance);
    partial void UpdateCustomPublicHoliday(CustomPublicHoliday instance);
    partial void DeleteCustomPublicHoliday(CustomPublicHoliday instance);
    partial void InsertCustomPublicHolidayDay(CustomPublicHolidayDay instance);
    partial void UpdateCustomPublicHolidayDay(CustomPublicHolidayDay instance);
    partial void DeleteCustomPublicHolidayDay(CustomPublicHolidayDay instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::LinqToSqlTestProject.Properties.Settings.Default.TestDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CustomPublicHoliday> CustomPublicHoliday
		{
			get
			{
				return this.GetTable<CustomPublicHoliday>();
			}
		}
		
		public System.Data.Linq.Table<CustomPublicHolidayDay> CustomPublicHolidayDay
		{
			get
			{
				return this.GetTable<CustomPublicHolidayDay>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.pCustomPublicHolidays")]
		public ISingleResult<pCustomPublicHolidaysResult> pCustomPublicHolidays()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<pCustomPublicHolidaysResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomPublicHoliday")]
	public partial class CustomPublicHoliday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CustomPublicHolidayRef;
		
		private string _CustomPublicHolidayName;
		
		private EntitySet<CustomPublicHolidayDay> _CustomPublicHolidayDay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomPublicHolidayRefChanging(System.Guid value);
    partial void OnCustomPublicHolidayRefChanged();
    partial void OnCustomPublicHolidayNameChanging(string value);
    partial void OnCustomPublicHolidayNameChanged();
    #endregion
		
		public CustomPublicHoliday()
		{
			this._CustomPublicHolidayDay = new EntitySet<CustomPublicHolidayDay>(new Action<CustomPublicHolidayDay>(this.attach_CustomPublicHolidayDay), new Action<CustomPublicHolidayDay>(this.detach_CustomPublicHolidayDay));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomPublicHolidayRef", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CustomPublicHolidayRef
		{
			get
			{
				return this._CustomPublicHolidayRef;
			}
			set
			{
				if ((this._CustomPublicHolidayRef != value))
				{
					this.OnCustomPublicHolidayRefChanging(value);
					this.SendPropertyChanging();
					this._CustomPublicHolidayRef = value;
					this.SendPropertyChanged("CustomPublicHolidayRef");
					this.OnCustomPublicHolidayRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomPublicHolidayName", DbType="NVarChar(50)")]
		public string CustomPublicHolidayName
		{
			get
			{
				return this._CustomPublicHolidayName;
			}
			set
			{
				if ((this._CustomPublicHolidayName != value))
				{
					this.OnCustomPublicHolidayNameChanging(value);
					this.SendPropertyChanging();
					this._CustomPublicHolidayName = value;
					this.SendPropertyChanged("CustomPublicHolidayName");
					this.OnCustomPublicHolidayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomPublicHoliday_CustomPublicHolidayDay", Storage="_CustomPublicHolidayDay", ThisKey="CustomPublicHolidayRef", OtherKey="CustomPublicHolidayRef")]
		public EntitySet<CustomPublicHolidayDay> CustomPublicHolidayDay
		{
			get
			{
				return this._CustomPublicHolidayDay;
			}
			set
			{
				this._CustomPublicHolidayDay.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomPublicHolidayDay(CustomPublicHolidayDay entity)
		{
			this.SendPropertyChanging();
			entity.CustomPublicHoliday = this;
		}
		
		private void detach_CustomPublicHolidayDay(CustomPublicHolidayDay entity)
		{
			this.SendPropertyChanging();
			entity.CustomPublicHoliday = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomPublicHolidayDay")]
	public partial class CustomPublicHolidayDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CustomPublicHolidayDayRef;
		
		private System.Guid _CustomPublicHolidayRef;
		
		private string _HolidayDayName;
		
		private System.DateTime _HolidayDate;
		
		private EntityRef<CustomPublicHoliday> _CustomPublicHoliday;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomPublicHolidayDayRefChanging(System.Guid value);
    partial void OnCustomPublicHolidayDayRefChanged();
    partial void OnCustomPublicHolidayRefChanging(System.Guid value);
    partial void OnCustomPublicHolidayRefChanged();
    partial void OnHolidayDayNameChanging(string value);
    partial void OnHolidayDayNameChanged();
    partial void OnHolidayDateChanging(System.DateTime value);
    partial void OnHolidayDateChanged();
    #endregion
		
		public CustomPublicHolidayDay()
		{
			this._CustomPublicHoliday = default(EntityRef<CustomPublicHoliday>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomPublicHolidayDayRef", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CustomPublicHolidayDayRef
		{
			get
			{
				return this._CustomPublicHolidayDayRef;
			}
			set
			{
				if ((this._CustomPublicHolidayDayRef != value))
				{
					this.OnCustomPublicHolidayDayRefChanging(value);
					this.SendPropertyChanging();
					this._CustomPublicHolidayDayRef = value;
					this.SendPropertyChanged("CustomPublicHolidayDayRef");
					this.OnCustomPublicHolidayDayRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomPublicHolidayRef", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CustomPublicHolidayRef
		{
			get
			{
				return this._CustomPublicHolidayRef;
			}
			set
			{
				if ((this._CustomPublicHolidayRef != value))
				{
					if (this._CustomPublicHoliday.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomPublicHolidayRefChanging(value);
					this.SendPropertyChanging();
					this._CustomPublicHolidayRef = value;
					this.SendPropertyChanged("CustomPublicHolidayRef");
					this.OnCustomPublicHolidayRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayDayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HolidayDayName
		{
			get
			{
				return this._HolidayDayName;
			}
			set
			{
				if ((this._HolidayDayName != value))
				{
					this.OnHolidayDayNameChanging(value);
					this.SendPropertyChanging();
					this._HolidayDayName = value;
					this.SendPropertyChanged("HolidayDayName");
					this.OnHolidayDayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayDate", DbType="Date NOT NULL")]
		public System.DateTime HolidayDate
		{
			get
			{
				return this._HolidayDate;
			}
			set
			{
				if ((this._HolidayDate != value))
				{
					this.OnHolidayDateChanging(value);
					this.SendPropertyChanging();
					this._HolidayDate = value;
					this.SendPropertyChanged("HolidayDate");
					this.OnHolidayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomPublicHoliday_CustomPublicHolidayDay", Storage="_CustomPublicHoliday", ThisKey="CustomPublicHolidayRef", OtherKey="CustomPublicHolidayRef", IsForeignKey=true)]
		public CustomPublicHoliday CustomPublicHoliday
		{
			get
			{
				return this._CustomPublicHoliday.Entity;
			}
			set
			{
				CustomPublicHoliday previousValue = this._CustomPublicHoliday.Entity;
				if (((previousValue != value) 
							|| (this._CustomPublicHoliday.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomPublicHoliday.Entity = null;
						previousValue.CustomPublicHolidayDay.Remove(this);
					}
					this._CustomPublicHoliday.Entity = value;
					if ((value != null))
					{
						value.CustomPublicHolidayDay.Add(this);
						this._CustomPublicHolidayRef = value.CustomPublicHolidayRef;
					}
					else
					{
						this._CustomPublicHolidayRef = default(System.Guid);
					}
					this.SendPropertyChanged("CustomPublicHoliday");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class pCustomPublicHolidaysResult
	{
		
		private System.Guid _CustomPublicHolidayRef;
		
		private string _CustomPublicHolidayName;
		
		public pCustomPublicHolidaysResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomPublicHolidayRef", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CustomPublicHolidayRef
		{
			get
			{
				return this._CustomPublicHolidayRef;
			}
			set
			{
				if ((this._CustomPublicHolidayRef != value))
				{
					this._CustomPublicHolidayRef = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomPublicHolidayName", DbType="NVarChar(50)")]
		public string CustomPublicHolidayName
		{
			get
			{
				return this._CustomPublicHolidayName;
			}
			set
			{
				if ((this._CustomPublicHolidayName != value))
				{
					this._CustomPublicHolidayName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
